name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches: [master]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY_NAME: flydreamair
      AZURE_CONTAINER_REGISTRY: flydreamair.azurecr.io
      CONTAINER_APP_NAME_FRONTEND: frontend
      CONTAINER_APP_NAME_BACKEND: backend
      RESOURCE_GROUP: Main-RG

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.AZURE_CONTAINER_REGISTRY }}
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      - name: Build and push backend container image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REGISTRY_NAME }}/backend:${{ github.sha }}
          file: ./backend/dockerfile

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        # setting the frontend origin to a placeholder value since it'll have to be injected after the frontend
      - name: Deploy backend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REGISTRY_NAME }}/backend:${{ github.sha }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME_BACKEND }}
          environmentVariables: |
            ASPNETCORE_ENVIRONMENT=Production
            ASPNETCORE_FRONTEND_ORIGIN=https://placeholder.local

      - name: Get backend container app URL
        id: get-backend-url
        run: |
          BACKEND_URL=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME_BACKEND }} --resource-group ${{ env.RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
          echo "backend_url=$BACKEND_URL" >> $GITHUB_OUTPUT

      - name: Build and push frontend container image to ACR
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REGISTRY_NAME }}/frontend:${{ github.sha }}
          file: ./frontend/dockerfile
          build-args: |
            VITE_API_URL=https://${{ steps.get-backend-url.outputs.backend_url }}

      - name: Deploy frontend to Azure Container Apps
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.REGISTRY_NAME }}/frontend:${{ github.sha }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          containerAppName: ${{ env.CONTAINER_APP_NAME_FRONTEND }}

      - name: Get frontend container app URL
        id: get-frontend-url
        run: |
          FRONTEND_URL=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME_FRONTEND }} --resource-group ${{ env.RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
          echo "frontend_url=$FRONTEND_URL" >> $GITHUB_OUTPUT

      - name: Update backend CORS origin with frontend URL
        run: |
          az containerapp update \
            --name ${{ env.CONTAINER_APP_NAME_BACKEND }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --set-env-vars ASPNETCORE_FRONTEND_ORIGIN=https://${{ steps.get-frontend-url.outputs.frontend_url }}

      - name: Add frontend container app URL to step summary
        run: |
          echo "### 🌐 FlyDreamAir Site" >> $GITHUB_STEP_SUMMARY
          echo "https://${{ steps.get-frontend-url.outputs.frontend_url }}" >> $GITHUB_STEP_SUMMARY
